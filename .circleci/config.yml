version: 2.1

orbs:
  python: circleci/python@1.2

workflows:
  main:  
    jobs:
      - build-and-test
      - tf-plan-apply:
          requires:
            - build-and-test
      - tf-apply:
          requires:
            - tf-plan-apply
          filters:
            branches:
              only:
                - main


jobs:
  build-and-test: 
    docker:
      - image: circleci/python:3.7
        # environment: 
        #   DEBUG: 1
        #   HOST: localhost
        #   PORT: 8000
        #   DATABASE_URL: postgres://postgres@localhost/postgres
        #   REDIS_URL: localhost:6379
        #   SECRET_KEY: ${SECRET_KEY}
      - image: circleci/postgres:9.6
        environment: 
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
          POSTGRES_HOST_AUTH_METHOD: trust
      - image: circleci/redis
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - run:
          name: Setup virtual environment and install deps
          command: |
            echo 'export TAG=0.1.${CIRCLE_BUILD_NUM}' >> ${BASH_ENV}
            echo 'export IMAGE_NAME=${CIRCLE_PROJECT_REPONAME}' >> ${BASH_ENV}
            source ${BASH_ENV} 
            virtualenv devopstest
            . devopstest/bin/activate
            pip3 install --no-cache-dir -q 'pipenv==2018.11.26' && pipenv install --deploy --system
      - run: 
          name: Run tests
          command: |
            . devopstest/bin/activate
            python3 manage.py test
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
          destination: tr-artifacts

      - run:
          name: Build docker image
          command: |
            docker build --build-arg SECRET_KEY=${SECRET_KEY} -t ${DOCKER_USERNAME}/${IMAGE_NAME}:${TAG} .
      
  tf-plan-apply:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: Clone infrastructure repo
          command: |
            git clone https://github.com/mirr254/devops-example-25981-infra.git
      - run: 
          name: Initialize TF and plan
          command: |
            cd devops-example-25981-infra
            terraform apply init -input=false
            terraform plan -var 'secret_key=$SECRET_KEY' -var 'heroku_acc_email=$HEROKU_EMAIL' -var 'heroku_api_key=$HEROKU_API_KEY' -out tfapply 
      - persist_to_workspace:
          root: .
          paths:
            - .

  tf-apply:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Terraform apply to deploy resources
          command: |
            terraform apply -auto-approve tfapply
    